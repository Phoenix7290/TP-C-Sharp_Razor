// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP3_Razor.Data;

#nullable disable

namespace TP3_Razor.Migrations
{
    [DbContext(typeof(CityBreaksContext))]
    [Migration("20250606012332_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("TP3_Razor.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("CityName");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "São Paulo"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "Lisboa"
                        });
                });

            modelBuilder.Entity("TP3_Razor.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT")
                        .HasColumnName("Code");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryCode = "BR",
                            CountryName = "Brazil"
                        },
                        new
                        {
                            Id = 2,
                            CountryCode = "PT",
                            CountryName = "Portugal"
                        });
                });

            modelBuilder.Entity("TP3_Razor.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT")
                        .HasColumnName("PropertyName");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("TEXT")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Hotel Central SP",
                            PricePerNight = 250.00m
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Name = "Pousada Lisboa",
                            PricePerNight = 150.00m
                        });
                });

            modelBuilder.Entity("TP3_Razor.Models.City", b =>
                {
                    b.HasOne("TP3_Razor.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("TP3_Razor.Models.Property", b =>
                {
                    b.HasOne("TP3_Razor.Models.City", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TP3_Razor.Models.City", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("TP3_Razor.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
